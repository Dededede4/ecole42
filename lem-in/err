==11663== Memcheck, a memory error detector
==11663== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11663== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==11663== Command: ./a.out
==11663== 
==11663== Use of uninitialised value of size 8
==11663==    at 0x100005B6A: get_next_way (in ./a.out)
==11663==    by 0x100005BF1: find_sortest_way (in ./a.out)
==11663==    by 0x100005D6B: find_sortest_ways (in ./a.out)
==11663==    by 0x1000050A6: main (in ./a.out)
==11663== 
==11663== Invalid read of size 8
==11663==    at 0x100005B6A: get_next_way (in ./a.out)
==11663==    by 0x100005BF1: find_sortest_way (in ./a.out)
==11663==    by 0x100005D6B: find_sortest_ways (in ./a.out)
==11663==    by 0x1000050A6: main (in ./a.out)
==11663==  Address 0x31 is not stack'd, malloc'd or (recently) free'd
==11663== 
==11663== 
==11663== Process terminating with default action of signal 11 (SIGSEGV)
==11663==  Access not within mapped region at address 0x31
==11663==    at 0x100005B6A: get_next_way (in ./a.out)
==11663==    by 0x100005BF1: find_sortest_way (in ./a.out)
==11663==    by 0x100005D6B: find_sortest_ways (in ./a.out)
==11663==    by 0x1000050A6: main (in ./a.out)
==11663==  If you believe this happened as a result of a stack
==11663==  overflow in your program's main thread (unlikely but
==11663==  possible), you can try to increase the size of the
==11663==  main thread stack using the --main-stacksize= flag.
==11663==  The main thread stack size used in this run was 8388608.
==11663== 
==11663== HEAP SUMMARY:
==11663==     in use at exit: 23,382 bytes in 301 blocks
==11663==   total heap usage: 468 allocs, 167 frees, 30,206 bytes allocated
==11663== 
==11663== LEAK SUMMARY:
==11663==    definitely lost: 1,960 bytes in 91 blocks
==11663==    indirectly lost: 0 bytes in 0 blocks
==11663==      possibly lost: 0 bytes in 0 blocks
==11663==    still reachable: 945 bytes in 47 blocks
==11663==         suppressed: 20,477 bytes in 163 blocks
==11663== Rerun with --leak-check=full to see details of leaked memory
==11663== 
==11663== For counts of detected and suppressed errors, rerun with: -v
==11663== Use --track-origins=yes to see where uninitialised values come from
==11663== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
